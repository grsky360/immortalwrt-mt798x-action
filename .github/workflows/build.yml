on:
  workflow_dispatch:
    inputs:
      device:
        description: device
        required: true
        type: choice
        options:
          - xiaomi_mi-router-wr30u-112m
          - xiaomi_mi-router-wr30u-stock
      ref-version:
        description: rev version
        required: false
        default: openwrt-21.02
        type: string

env:
  TZ: Asia/Shanghai
  WORKSPACE: /workspace

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: setup env
        run: |
          echo 'start setup env'
          sudo mkdir -p $WORKSPACE
          sudo chown $USER:$GROUPS $WORKSPACE
          sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
          echo 'finish setup env'

      - name: clone source
        working-directory: ${{ env.WORKSPACE }}
        run: |
          echo 'start clone source'
          git clone --depth=1 -b ${{ inputs.ref-version }} https://github.com/hanwckf/immortalwrt-mt798x.git openwrt
          echo 'finish clone source'

      - name: configure feeds
        working-directory: ${{ env.WORKSPACE }}/openwrt
        run: |
          echo 'start configure feeds'
          ./scripts/feeds update -a
          echo 'finish configure feeds'

      - name: install feeds
        working-directory: ${{ env.WORKSPACE }}/openwrt
        run: |
          echo 'start install feeds'
          ./scripts/feeds install -a
          echo 'finish install feeds'

      - name: configure device
        working-directory: ${{ env.WORKSPACE }}/openwrt
        run: |
          echo 'start configure device'
          cp -f defconfig/mt7981-ax3000.config .config
          sed -Ei 's/(CONFIG_TARGET_DEVICE_mediatek.*)=y/\1=n/g' .config
          sed -Ei 's/(CONFIG_TARGET_DEVICE_mediatek_mt7981_DEVICE_${{ inputs.device }})=n/\1=y/g' .config
          cat .config
          echo 'finish configure device'

      - name: build
        working-directory: ${{ env.WORKSPACE }}/openwrt
        run: |
          echo 'start build'
          make defconfig
          make download -j8
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo 'finish build'
